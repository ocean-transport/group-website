#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Ocean Transport Group documentation build configuration file, created by
# sphinx-quickstart on Wed Jul 31 18:58:11 2019.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

import recommonmark
from recommonmark.transform import AutoStructify


from pybtex.style.formatting.unsrt import Style as UnsrtStyle
from pybtex.style.template import words, sentence, optional
from pybtex.style.sorting import BaseSortingStyle
from pybtex.plugin import register_plugin



# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.mathjax',
    'sphinx.ext.githubpages',
    'recommonmark',
    'sphinxcontrib.bibtex',
    'sphinx_jinja'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = ['.rst', '.md']

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'LDEO Ocean Transport Group'
html_title = 'LDEO Ocean Transport Group'
copyright = '2019-2022, Ryan Abernathey'
author = 'Ryan Abernathey'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store', 'README*']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


class DateSortingStyle(BaseSortingStyle):

    def sorting_key(self, entry):
        if entry.type in ('book', 'inbook'):
            author_key = self.author_editor_key(entry)
        elif 'author' in entry.persons:
            author_key = self.persons_key(entry.persons['author'])
        else:
            author_key = ''
        return (entry.fields.get('year', ''), author_key, entry.fields.get('title', ''))

    def sort(self, entries):
        return sorted(entries, key=self.sorting_key, reverse=False)

    def persons_key(self, persons):
        return '   '.join(self.person_key(person) for person in persons)

    def person_key(self, person):
        return '  '.join((
            ' '.join(person.prelast_names + person.last_names),
            ' '.join(person.first_names + person.middle_names),
            ' '.join(person.lineage_names),
        )).lower()

    def author_editor_key(self, entry):
        if entry.persons.get('author'):
            return self.persons_key(entry.persons['author'])
        elif entry.persons.get('editor'):
            return self.persons_key(entry.persons['editor'])
        else:
            return ''


register_plugin('pybtex.style.sorting', 'date', DateSortingStyle)


class NoWebRefStyle(UnsrtStyle):
    default_sorting_style = 'date'

    def format_web_refs(self, e):
        return sentence [
            optional [ self.format_doi(e) ],
            ]


register_plugin('pybtex.style.formatting', 'nowebref', NoWebRefStyle)

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_book_theme'
html_theme_options = {
    "repository_url": "https://github.com/ocean-transport/group-website",
    "use_issues_button": False,
    "use_repository_button": True,
    "use_edit_page_button": True
}

html_logo = '_static/otg_logo_blue.svg'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
html_css_files = ["custom.css"]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
# html_sidebars = {
#     '**': [
#         'about.html',
#         'navigation.html',
#     ]
# }


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'OceanTransportGroupdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'OceanTransportGroup.tex', 'LDEO Ocean Transport Group',
     'Ryan Abernathey', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'oceantransportgroup', 'LDEO Ocean Transport Group',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'OceanTransportGroup', 'LDEO Ocean Transport Group',
     author, 'OceanTransportGroup', 'One line description of project.',
     'Miscellaneous'),
]


# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'https://docs.python.org/': None}


def setup(app):
    app.add_config_value('recommonmark_config', {
            'url_resolver': lambda url: github_doc_root + url,
            'auto_toc_tree_section': 'Contents',
            }, True)
    app.add_transform(AutoStructify)

# load data
jinja_contexts = {}
import yaml
with open('_data/people.yml') as people_data_file:
    people = yaml.safe_load(people_data_file)
    jinja_contexts['people'] = {'people': people['current']}
    jinja_contexts['alumni'] = {'alumni': people['alumni']}
